<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B1ACE8CE-7B60-32F3-9F40-AB5AEA684041}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>vhacd</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">vhacd.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">vhacd</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">vhacd.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">vhacd</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">vhacd.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">vhacd</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">vhacd.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">vhacd</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -std=c++11</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -std=c++11</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -std=c++11</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) -std=c++11</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <OpenMPSupport>true</OpenMPSupport>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\lib3mf\Bindings\Cpp;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\inc;D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\public;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/GitRepos/Part-decomposition-for-additive-manufacturing/external/VHACD_Performance/VHACD_Lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\Programme\CMake\bin\cmake.exe -SD:/GitRepos/Part-decomposition-for-additive-manufacturing -BD:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build --check-stamp-file D:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build/external/VHACD_Performance/VHACD_Lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\cmake\vhacd-config.cmake;D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\CMakeFiles\cmake.verify_globs;D:\Programme\CMake\share\cmake-3.25\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePackageConfigHelpers.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePushCheckState.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CheckSymbolExists.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenCL.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenMP.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/GitRepos/Part-decomposition-for-additive-manufacturing/external/VHACD_Performance/VHACD_Lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\Programme\CMake\bin\cmake.exe -SD:/GitRepos/Part-decomposition-for-additive-manufacturing -BD:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build --check-stamp-file D:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build/external/VHACD_Performance/VHACD_Lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\cmake\vhacd-config.cmake;D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\CMakeFiles\cmake.verify_globs;D:\Programme\CMake\share\cmake-3.25\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePackageConfigHelpers.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePushCheckState.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CheckSymbolExists.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenCL.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenMP.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/GitRepos/Part-decomposition-for-additive-manufacturing/external/VHACD_Performance/VHACD_Lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\Programme\CMake\bin\cmake.exe -SD:/GitRepos/Part-decomposition-for-additive-manufacturing -BD:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build --check-stamp-file D:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build/external/VHACD_Performance/VHACD_Lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\cmake\vhacd-config.cmake;D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\CMakeFiles\cmake.verify_globs;D:\Programme\CMake\share\cmake-3.25\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePackageConfigHelpers.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePushCheckState.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CheckSymbolExists.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenCL.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenMP.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/GitRepos/Part-decomposition-for-additive-manufacturing/external/VHACD_Performance/VHACD_Lib/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\Programme\CMake\bin\cmake.exe -SD:/GitRepos/Part-decomposition-for-additive-manufacturing -BD:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build --check-stamp-file D:/GitRepos/Part-decomposition-for-additive-manufacturing/release_build/external/VHACD_Performance/VHACD_Lib/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\cmake\vhacd-config.cmake;D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\CMakeFiles\cmake.verify_globs;D:\Programme\CMake\share\cmake-3.25\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePackageConfigHelpers.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakeParseImplicitLinkInfo.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CMakePushCheckState.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\CheckSymbolExists.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenCL.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindOpenMP.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageHandleStandardArgs.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\FindPackageMessage.cmake;D:\Programme\CMake\share\cmake-3.25\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\external\VHACD_Performance\VHACD_Lib\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\FloatMath.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\SimpleJobSystem.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\VHACD-ASYNC.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\VHACD.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\aabbtree.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\btAlignedAllocator.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\btConvexHullComputer.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\vhacdICHull.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\vhacdManifoldMesh.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\vhacdMesh.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\vhacdRaycastMesh.cpp" />
    <ClCompile Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\external\VHACD_Performance\VHACD_Lib\src\vhacdVolume.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\GitRepos\Part-decomposition-for-additive-manufacturing\release_build\ZERO_CHECK.vcxproj">
      <Project>{41F1EC6D-BA95-355D-B144-0F55332C8995}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>